@page
@model GymBuddy.Pages.Michelle.IndexModel

@{
    ViewData["Title"] = "Index";
}
<div style="background: Black;
            color: antiquewhite;
            font-size: 60px;
            padding: 5px;
            margin: 30px;
            text-align: center;">
    <h1>Gym Buddy Index</h1>
</div>
<form>
    <select asp-for="ExperienceLev" asp-items="Model.ExperienceLevel" style="float:left;">
        <option value="">Experience Level</option>
        
    </select>
        <p>
         Name <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
       
        <a asp-page="./Index" asp-route-sortOrder="asc"
        style="float:right;background: lightpink;color:black;padding:5px;border:1px solid black;margin-right:5px;margin-bottom:5px">
        Sort by Exercise Name (ascending)
        </a>

        <a asp-page="./Index" asp-route-sortOrder="desc"
           style="float:right;background:lightpink;color:black;padding:5px;border:1px solid black;margin-right:5px;margin-bottom:5px">
            Sort by Exercise Name (descending)
        </a>
    </p>
</form>
<div style="min-height:400px;Color:black;
     font-size: 15px;
     padding: 5px;
     border: 15px solid lightblue;
     margin: 10px;">
    <div style="float:left;padding:5px;">
        <p>
            <a asp-page="Create">Create a New Exercise </a>

        </p>
    </div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Exercises[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Exercises[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Exercises[0].PrimaryMuscle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Exercises[0].SecondaryMuscle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Exercises[0].TrainingLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Exercises[0].IntensityLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Exercises[0].HaveCompleted)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Exercises) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PrimaryMuscle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SecondaryMuscle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TrainingLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IntensityLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HaveCompleted)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
</div>
